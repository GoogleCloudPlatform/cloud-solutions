{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    ":semanticCommits",
    ":docker",
    ":enableVulnerabilityAlertsWithLabel(SECURITY)"
  ],
  "dependencyDashboardApproval": true,
  "rangeStrategy": "bump",
  "npm": {
    "minimumReleaseAge": "3 days"
  },
  "pip-compile": {
    "managerFilePatterns": ["(^|/)requirements\\.txt$"]
  },
  "docker-compose": {
    "enabled": true
  },
  "hostRules": [
    {
      "enabled": false,
      "hostType": "docker",
      "matchHost": "https://gcr.io",
      "token": "dummy-to-avoid-renovate-errors"
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "description": "Update _VERSION variables in Dockerfiles, shell scripts, and files in the ci-tasks directory",
      "managerFilePatterns": [
        "(^|/|\\.)([Dd]ocker|[Cc]ontainer)file$",
        "(^|/)([Dd]ocker|[Cc]ontainer)file[^/]*$",
        "(^|/).*\\.sh$",
        "ci-tasks/.*$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>[a-z-]+?)(?: depName=(?<depName>.+?))? packageName=(?<packageName>.+?)(?: versioning=(?<versioning>[a-z-]+?))?\\s(?:ENV|ARG)?\\s*.+?_VERSION=\"?(?<currentValue>.+?)\"?\\s"
      ]
    }
  ],
  "packageRules": [
    {
      "matchFileNames": ["!projects/**"],
      "groupName": "00-repository-management",
      "commitMessagePrefix": "chore(deps): [repository-management]"
    },
    {
      "matchFileNames": ["projects/**"],
      "groupName": "00-ungrouped-projects",
      "commitMessagePrefix": "chore(deps): [ungrouped-projects]"
    },
    {
      "matchFileNames": ["projects/ai/**"],
      "groupName": "ai",
      "commitMessagePrefix": "chore(deps): [ai]"
    },
    {
      "matchFileNames": ["projects/alloydb-auth-workload-identity/**"],
      "groupName": "alloydb-auth-workload-identity",
      "commitMessagePrefix": "chore(deps): [alloydb-auth-workload-identity]"
    },
    {
      "matchFileNames": ["projects/alloydb-autoscaler/**"],
      "groupName": "alloydb-autoscaler",
      "commitMessagePrefix": "chore(deps): [alloydb-autoscaler]"
    },
    {
      "matchFileNames": ["projects/alloydbomni-ha-patroni-etcd/**"],
      "groupName": "alloydbomni-ha-patroni-etcd",
      "commitMessagePrefix": "chore(deps): [alloydbomni-ha-patroni-etcd]"
    },
    {
      "matchFileNames": ["projects/arm-reference-guides/**"],
      "groupName": "arm-reference-guides",
      "commitMessagePrefix": "chore(deps): [arm-reference-guides]"
    },
    {
      "matchFileNames": ["projects/bss-ai-agent-infra/**"],
      "groupName": "bss-ai-agent-infra",
      "commitMessagePrefix": "chore(deps): [bss-ai-agent-infra]"
    },
    {
      "matchFileNames": ["projects/bulk-delete-gcs-files-fn/**"],
      "groupName": "bulk-delete-gcs-files-fn",
      "commitMessagePrefix": "chore(deps): [bulk-delete-gcs-files-fn]"
    },
    {
      "matchFileNames": ["projects/common/**"],
      "groupName": "common",
      "commitMessagePrefix": "chore(deps): [common]"
    },
    {
      "matchFileNames": ["projects/confidential-ai-model-serving/**"],
      "groupName": "confidential-ai-model-serving",
      "commitMessagePrefix": "chore(deps): [confidential-ai-model-serving]"
    },
    {
      "matchFileNames": ["projects/contextual-ai/**"],
      "groupName": "contextual-ai",
      "commitMessagePrefix": "chore(deps): [contextual-ai]"
    },
    {
      "matchFileNames": ["projects/conversational-commerce-agent/**"],
      "groupName": "conversational-commerce-agent",
      "commitMessagePrefix": "chore(deps): [conversational-commerce-agent]"
    },
    {
      "matchFileNames": ["projects/data-migration-validation-tool/**"],
      "groupName": "data-migration-validation-tool",
      "commitMessagePrefix": "chore(deps): [data-migration-validation-tool]"
    },
    {
      "matchFileNames": ["projects/database-archival/**"],
      "groupName": "database-archival",
      "commitMessagePrefix": "chore(deps): [database-archival]"
    },
    {
      "matchFileNames": ["projects/dataflow-bigquery-change-data-capture/**"],
      "groupName": "dataflow-bigquery-change-data-capture",
      "commitMessagePrefix": "chore(deps): [dataflow-bigquery-change-data-capture]"
    },
    {
      "matchFileNames": ["projects/dataflow-gcs-avro-to-spanner-scd/**"],
      "groupName": "dataflow-gcs-avro-to-spanner-scd",
      "commitMessagePrefix": "chore(deps): [dataflow-gcs-avro-to-spanner-scd]"
    },
    {
      "matchFileNames": ["projects/dataflow-gcs-to-alloydb/**"],
      "groupName": "dataflow-gcs-to-alloydb",
      "commitMessagePrefix": "chore(deps): [dataflow-gcs-to-alloydb]"
    },
    {
      "matchFileNames": ["projects/dataflow-kafka-to-bigquery/**"],
      "groupName": "dataflow-kafka-to-bigquery",
      "commitMessagePrefix": "chore(deps): [dataflow-kafka-to-bigquery]"
    },
    {
      "matchFileNames": ["projects/dataproc-trino-autoscaler/**"],
      "groupName": "dataproc-trino-autoscaler",
      "commitMessagePrefix": "chore(deps): [dataproc-trino-autoscaler]"
    },
    {
      "matchFileNames": ["projects/fsi-quant-assistant/**"],
      "groupName": "fsi-quant-assistant",
      "commitMessagePrefix": "chore(deps): [fsi-quant-assistant]"
    },
    {
      "matchFileNames": ["projects/hive-bigquery-connector-demo/**"],
      "groupName": "hive-bigquery-connector-demo",
      "commitMessagePrefix": "chore(deps): [hive-bigquery-connector-demo]"
    },
    {
      "matchFileNames": ["projects/hpa-recommender/**"],
      "groupName": "hpa-recommender",
      "commitMessagePrefix": "chore(deps): [hpa-recommender]"
    },
    {
      "matchFileNames": ["projects/k8s-hybrid-neg-controller/**"],
      "groupName": "k8s-hybrid-neg-controller",
      "commitMessagePrefix": "chore(deps): [k8s-hybrid-neg-controller]"
    },
    {
      "matchFileNames": ["projects/like-scelsius-but-better/**"],
      "groupName": "like-scelsius-but-better",
      "commitMessagePrefix": "chore(deps): [like-scelsius-but-better]"
    },
    {
      "matchFileNames": ["projects/log-scoping-tool/**"],
      "groupName": "log-scoping-tool",
      "commitMessagePrefix": "chore(deps): [log-scoping-tool]"
    },
    {
      "matchFileNames": ["projects/migrate-from-azure-to-google-cloud/**"],
      "groupName": "migrate-from-azure-to-gcp",
      "commitMessagePrefix": "chore(deps): [migrate-from-azure-to-google-cloud]"
    },
    {
      "matchFileNames": ["projects/nvidia-omniverse-on-google-cloud/**"],
      "groupName": "nvidia-omniverse-on-google-cloud",
      "commitMessagePrefix": "chore(deps): [nvidia-omniverse-on-google-cloud]"
    },
    {
      "matchFileNames": ["projects/pino-logging-gcp-config/**"],
      "groupName": "pino-logging-gcp-config",
      "commitMessagePrefix": "chore(deps): [pino-logging-gcp-config]"
    },
    {
      "matchFileNames": ["projects/sa-tools/**"],
      "groupName": "sa-tools",
      "commitMessagePrefix": "chore(deps): [sa-tools]"
    },
    {
      "matchFileNames": ["projects/sa-tools/common/**"],
      "groupName": "sa-tools-common",
      "commitMessagePrefix": "chore(deps): [sa-tools-common]"
    },
    {
      "matchFileNames": ["projects/sa-tools/perf-benchmark/**"],
      "groupName": "sa-tools-perf-benchmark",
      "commitMessagePrefix": "chore(deps): [sa-tools-perf-benchmark]"
    },
    {
      "matchFileNames": ["projects/sa-tools/performance-testing/**"],
      "groupName": "sa-tools-performance-testing",
      "commitMessagePrefix": "chore(deps): [sa-tools-performance-testing]"
    },
    {
      "matchFileNames": ["projects/serverless-event-processing/**"],
      "groupName": "serverless-event-processing",
      "commitMessagePrefix": "chore(deps): [serverless-event-processing]"
    },
    {
      "matchFileNames": ["projects/smart-npc/**"],
      "groupName": "smart-npc",
      "commitMessagePrefix": "chore(deps): [smart-npc]"
    },
    {
      "matchFileNames": ["projects/speech2speech_translation/**"],
      "groupName": "speech2speech_translation",
      "commitMessagePrefix": "chore(deps): [speech2speech_translation]"
    },
    {
      "matchFileNames": ["projects/speech2srt/**"],
      "groupName": "speech2srt",
      "commitMessagePrefix": "chore(deps): [speech2srt]"
    },
    {
      "matchFileNames": ["projects/streamlit-pubsub/**"],
      "groupName": "streamlit-pubsub",
      "commitMessagePrefix": "chore(deps): [streamlit-pubsub]"
    },
    {
      "matchFileNames": ["projects/unified-secops/**"],
      "groupName": "unified-secops",
      "commitMessagePrefix": "chore(deps): [unified-secops]"
    },
    {
      "matchFileNames": ["projects/user-guide/**"],
      "groupName": "user-guide",
      "commitMessagePrefix": "chore(deps): [user-guide]"
    },
    {
      "matchFileNames": ["projects/vision-ai-edge-platform/**"],
      "groupName": "vision-ai-edge-platform",
      "commitMessagePrefix": "chore(deps): [vision-ai-edge-platform]"
    }
  ]
}
