#!/bin/bash

download_folder=""
bucket_name=""
cluster_name=""
instance_index=""
patroni_current_node_ip=""
ip_addr=""
replication_user_password=""
postgres_super_user=""
postgres_super_user_password=""

sudo apt-get update
sudo apt-get install -y ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |
  sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
sudo apt-get update

sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

sudo mkdir -p /"${download_folder}"

sudo gcloud storage cp gs://"${bucket_name}"/* /"${download_folder}" -r

sudo chmod +x "/${download_folder}/setup.sh"

sudo mkdir -p /"${download_folder}"/config

cat <<EOF >/"${download_folder}"/config/patroni.yml
scope: ${cluster_name}
name: patroni${instance_index}

restapi:
  listen: 0.0.0.0:8008
  connect_address: ${patroni_current_node_ip}:8008

etcd:
  hosts: %{ for idx, ip_addr in etcd_nodes_ip_list ~} ${ip_addr}:2379%{ if idx != length(etcd_nodes_ip_list) - 1 ~},%{ endif ~}%{ endfor ~}


bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        hot_standby: "on"
        wal_keep_segments: 20
        max_wal_senders: 8
        max_replication_slots: 8

  initdb:
  - encoding: UTF8
  - data-checksums

postgresql:
  listen: 0.0.0.0:5432
  connect_address: ${patroni_current_node_ip}:5432
  data_dir: /home/postgres/data
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: alloydbreplica
      password: "${replication_user_password}"
    superuser:
      username: ${postgres_super_user}
      password: "${postgres_super_user_password}"
  parameters:
    unix_socket_directories: '..'

  pg_hba:
  - host replication        alloydbreplica     127.0.0.1/32 trust
%{ for ip_addr in patroni_nodes_ip_list ~}
  - host all                alloydbreplica     ${ip_addr}/32 trust
  - host replication        alloydbreplica     ${ip_addr}/32 trust
  - host alloydbmetadata    alloydbmetadata    ${ip_addr}/32 trust
%{ endfor ~}
  - host all all 0.0.0.0/0 md5

tags:
  noloadbalance: false
  nofailover: false
  clonefrom: false
  nosync: false

EOF

cd /"${download_folder}" || {
  echo "Error: Failed to change directory to '/${download_folder}'" >&2
  exit 1
}

sudo docker compose up
