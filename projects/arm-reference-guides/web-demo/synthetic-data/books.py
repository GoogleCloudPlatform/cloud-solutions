# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: disable=missing-module-docstring

import csv
import datetime
import random

# --- Configuration ---
NUM_ENTRIES = 10000

# --- Data Lists (You can expand these!) ---
book_titles = [
    "The Crimson Key",
    "Echoes of the Forgotten City",
    "Whispers in the Willow",
    "The Last Lighthouse",
    "A Clockwork Heart",
    "Beneath the Silent Sky",
    "The Serpent's Eye",
    "Starlight Over Serenity",
    "The Alchemist's Daughter",
    "Shadows of the Old Library",
    "The Emerald Labyrinth",
    "Quantum Leapfrog",
    "The Gilded Cage",
    "Beyond the Horizon",
    "The Dragon's Breath",
    "Moonlight Serenade",
    "The Weaver's Song",
    "The Forgotten Map",
    "Secrets of the Crystal Forest",
    "The Time Traveler's Dilemma",
    "The Silent Witness",
    "Across the Silk Road",
    "The Pirate's Curse",
    "Whispers on the Wind",
    "The Last Starship",
    "The Missing Manuscript",
    "The Oracle's Prophecy",
    "Galactic Frontier",
    "The Midnight Train",
    "The Emperor's Secret",
    "The Lost City of Gold",
    "Love in Old Paris",
    "The Alchemist's Apprentice",
    "The Case of the Missing Jewel",
    "The Crystal Kingdom",
    "Starship Pioneers",
    "The Unexpected Guest",
    "The Roman Emperor",
    "The Treasure Hunter",
    "A Summer Affair in Tuscany",
    "The Weaver's Daughter",
    "The Shadow Over the Manor",
    "The Dragon's Lair",
    "Cosmic Journey",
    "The Secret Agent",
    "The Viking Saga",
    "The Lost Island",
    "Love in the Highlands",
    "The Painter's Secret",
    "The Case of the Missing Heir",
    "The Enchanted Forest",
    "The Last Astronaut",
    "The Spy Who Loved Me",
    "The Egyptian Queen",
    "The Treasure of Captain Kidd",
    "A Parisian Romance",
    "The Musician's Legacy",
    "The Mystery of the Old House",
    "The Dragon's Quest",
    "The Time Machine",
    "The Secret Garden",
    "The Roman Legion",
    "The Search for the Lost City",
    "Love in Venice",
    "The Writer's Block",
    "The Case of the Missing Manuscript",
    "The Wizard's Apprentice",
    "The Space Odyssey",
    "The Silent Observer",
    "The Pharaoh's Tomb",
    "The Lost Treasure",
    "A Love Affair in Italy",
    "The Artist's Studio",
    "The Mystery of the Missing Train",
    "The Dragon's Curse",
    "Journey to Mars",
    "The Perfect Stranger",
    "The Roman Empire",
    "The Lost Colony",
    "Love in the Vineyard",
    "The Weaver's Tale",
    "The Case of the Missing Necklace",
    "The Wizard's Staff",
    "The Space Station",
    "The Silent Partner",
    "The Viking Queen",
    "The Lost Temple",
    "Love in the City",
    "The Painter's Brush",
    "The Case of the Missing Witness",
    "The Enchanted Castle",
    "The Last Frontier",
    "The Spy Who Knew Too Much",
    "The Egyptian Pharaoh",
    "The Treasure of El Dorado",
    "A Parisian Dream",
    "The Musician's Heart",
    "The Mystery of the Old Clock",
    "The Dragon's Fire",
    "The Time Paradox",
    "The Secret Society",
    "The Roman Soldier",
    "The Lost World",
    "Love in the Rain",
    "The Painter's Palette",
    "The Case of the Missing Dog",
    "The Wizard's Tower",
    "The Space Shuttle",
    "The Silent Scream",
    "The Pharaoh's Curse",
    "The Lost Artifact",
    "A Love Affair in Rome",
    "The Artist's Hand",
    "The Mystery of the Missing Ring",
    "The Dragon's Scale",
    "Journey to Jupiter",
    "The Perfect Storm",
    "The Roman Arena",
    "The Lost Expedition",
    "Love in the Country",
    "The Weaver's Loom",
    "The Case of the Missing Letter",
    "The Wizard's Ring",
    "The Space Colony",
    "The Silent Witness",
    "The Viking Ship",
    "The Lost City of Atlantis",
    "Love in the Mountains",
    "The Painter's Canvas",
    "The Case of the Missing Painting",
    "The Dragon's Curse",
    "Journey to Saturn",
    "The Perfect Crime",
    "The Roman Gods",
    "The Lost City",
    "Love in the Garden",
    "The Weaver's Thread",
    "The Case of the Missing Book",
    "The Wizard's Spell",
    "The Spaceport",
    "The Silent Killer",
    "The Viking Warriors",
    "The Lost Waterfall",
    "Love in the Clouds",
    "The Painter's Smile",
    "The Case of the Missing Key",
    "The Wizard's Hat",
    "The Space Race",
    "The Silent Partner",
    "The Pharaoh's Crown",
    "The Lost Kingdom",
    "The Lost Treasure",
    "A Parisian Evening",
    "The Artist's Studio",
    "The Enchanted Garden",
    "The Last Train",
    "The Spy Who Came In",
    "The Egyptian Tomb",
    "The Treasure of the Caribbean",
    "A Parisian Cafe",
    "The Musician's Song",
    "The Mystery of the Old Ship",
    "The Dragon's Tears",
    "The Time Loop",
    "The Secret Message",
    "The Roman Road",
    "The Lost Valley",
    "Love in the Stars",
    "The Painter's Dream",
    "The Case of the Missing Key",
    "The Dragon's Hoard",
    "Journey to the Moon",
    "The Perfect Crime",
    "The Roman Gods",
    "The Lost Colony",
    "Love in the Vineyard",
    "The Weaver's Tale",
    "The Case of the Missing Necklace",
    "The Wizard's Staff",
    "The Space Station",
    "The Silent Partner",
    "The Viking Queen",
    "The Lost Temple",
    "Love in the City",
    "The Musician's Heart",
    "The Mystery of the Old Clock",
    "The Dragon's Fire",
    "The Time Paradox",
    "The Secret Society",
    "The Roman Soldier",
    "The Lost World",
    "Love in the Rain",
    "The Painter's Palette",
    "The Case of the Missing Dog",
    "The Wizard's Journey",
    "The Space Shuttle",
    "The Silent Scream",
    "The Viking Warriors",
    "The Lost Waterfall",
    "Love in the Clouds",
    "The Painter's Smile",
    "The Case of the Missing Witness",
    "The Enchanted Castle",
    "The Last Planet",
    "The Last Frontier",
    "The Spy Who Knew Too Much",
    "The Egyptian Gods",
    "The Treasure of the Sun",
    "A Parisian Evening",
    "The Musician's Dream",
    "The Mystery of the Old Ship",
    "The Dragon's Tears",
    "The Time Loop",
    "The Secret Diary",
    "The Roman Army",
    "The Lost Valley",
    "Love in the Snow",
    "The Painter's Life",
    "The Case of the Missing Person",
    "The Wizard's Ring",
    "The Space Colony",
    "The Silent Witness",
    "The Viking Ship",
    "The Lost City of Atlantis",
    "Love in the Mountains",
    "The Painter's Canvas",
    "The Case of the Missing Painting",
    "The Dragon's Scale",
    "Journey to Saturn",
    "The Perfect Crime",
    "The Roman Gods",
    "The Lost City",
    "Love in the Garden",
    "The Weaver's Thread",
    "The Case of the Missing Book",
    "The Wizard's Spell",
    "The Spaceport",
    "The Silent Killer",
    "The Obsidian Mirror",
    "City of Whispering Stone",
    "The Navigator's Compass",
    "Harbor of Lost Souls",
    "A Crown of Ash and Ember",
    "The Sky-Breaker's Oath",
    "The Iron Prince",
    "Voyage to the Sunken Stars",
    "The Clockmaker's Secret",
    "Halls of the Star-Gazer",
    "The Onyx Garden",
    "Chrono-Rider",
    "The Velvet Trap",
    "Edge of the Void",
    "The Gryphon's Song",
    "Nocturne in Silver",
    "The Architect's Plot",
    "The Sunken Scroll",
    "Tales of the Crimson Isles",
    "The Quantum Paradox",
    "The Silent Rebellion",
    "Voyage to the Eastern Rim",
    "The Buccaneer's Legacy",
    "A Song on the Breeze",
    "The Final Battlestar",
    "The Stolen Codex",
    "The Seer's Lament",
    "Nebula's End",
    "The Ghost Fleet",
    "The Tyrant's Gambit",
    "The Sunken Metropolis",
    "An Affair in Prague",
    "The Sorcerer's Scion",
    "The Case of the Scarlet Letter",
    "The Astral Plane",
    "Star-Sailors",
    "The Uninvited Passenger",
    "The Byzantine Conspiracy",
    "The Relic Hunter",
    "A Winter Romance in Vienna",
    "The Storyteller's Son",
    "The Fog Over the Moors",
    "The Wyvern's Peak",
    "Interstellar Drift",
    "The Double Agent",
    "The Celtic Legend",
    "The Forgotten Peninsula",
    "A Promise in the Alps",
    "The Sculptor's Enigma",
    "The Case of the Broken Cameo",
    "The Whispering Woods",
    "The Penultimate Mission",
    "The Spy in the Embassy",
    "The Persian Queen",
    "The Treasure of the Aztec",
    "A Florentine Kiss",
    "The Conductor's Baton",
    "The Secret of the Lighthouse",
    "The Wyrm's Awakening",
    "The Infinity Gate",
    "The Gilded Lily",
    "The Barbarian Horde",
    "The Quest for the Sunstone",
    "A Date in Dublin",
    "The Playwright's Folly",
    "The Case of the Purloined Portrait",
    "The Sorcerer's Citadel",
    "The Outer Rim",
    "The Unseen Threat",
    "The Sultan's Harem",
    "The Lost Tomb of Genghis Khan",
    "A Spanish Serenade",
    "The Forger's Signature",
    "The Mystery of the Derelict Ship",
    "The Leviathan's Maw",
    "Escape from Neptune",
    "The Asset",
    "The Incan Prophecy",
    "The Shattered Moon",
    "A Vow in the Valley",
    "The Architect's Blueprint",
    "The Case of the Stolen Stradivarius",
    "The Abyssal Rift",
    "The Outland Ranger",
    "The Agent Who Vanished",
    "The Babylonian King",
    "The Treasure of the Knights Templar",
    "A Venetian Masquerade",
    "The Diva's Final Bow",
    "The Secret of the Grand Hotel",
    "The Chimera's Cry",
    "The Singularity Event",
    "The Hidden Hand",
    "The Gladiator's Honor",
    "The Phantom Island",
    "Love on the Orient Express",
    "The Photographer's Lens",
    "The Case of the Counterfeit Coin",
    "The Celestial Orrery",
    "The Void Jumper",
    "The Silent Assassin",
    "The Mongol Horde",
    "The Lost City of Z",
    "A Kiss in Kyoto",
    "The Poet's Lament",
    "The Mystery of the Black Dahlia",
    "The Griffin's Talon",
    "Race to Andromeda",
    "The Perfect Target",
    "The Samurai's Code",
    "The Sunken Galleon",
    "Love in a Time of War",
    "The Cartographer's Error",
    "The Case of the Missing Memo",
    "The Druid's Stone",
    "The Dyson Sphere",
    "The Silent Coup",
    "The Spartan Shield",
    "The Cursed Archipelago",
    "Romance on the Riviera",
    "The Beekeeper's Secret",
    "The Case of the Absent Author",
    "The Griffin's Roost",
    "Voyage to Alpha Centauri",
    "The Double Cross",
    "The Aztec Priestess",
    "The Treasure of the Sierra Madre",
    "A Moroccan Night",
    "The Inventor's Workshop",
    "The Mystery of the Haunted Theater",
    "The Phoenix's Rebirth",
    "The Fold in Spacetime",
    "The Shadow Network",
    "The Mayan Calendar",
    "The Lost Continent of Mu",
    "Love Under the Northern Lights",
    "The Calligrapher's Ink",
    "The Case of the Vanishing Act",
    "The Oracle of Delphi",
    "The Black Hole Paradox",
    "The Silent Storm",
    "The Samurai's Daughter",
    "The Lost Fleet",
    "An Arctic Affair",
    "The Glassblower's Breath",
    "The Mystery of the Crimson Stain",
    "The Dragon's Gambit",
    "Journey to the Galactic Core",
    "The Perfect Alibi",
    "The Praetorian Guard",
    "The Lost Tribe",
    "Love in the Australian Outback",
    "The Locksmith's Key",
    "The Case of the Emerald Brooch",
    "The Siren's Call",
    "The Terraforming Project",
    "The Silent Conspiracy",
    "The Celtic Chieftain",
    "The Secret of Easter Island",
    "A Russian Romance",
    "The Watchmaker's Gear",
    "The Case of the Poisoned Pen",
    "The Sorceress of the North",
    "The Edge of the Universe",
    "The Silent Fleet",
    "The Gladiator's Rise",
    "The Sunken City of Ys",
    "A Highland Fling",
    "The Perfumer's Scent",
    "The Case of the Swapped Suitcase",
    "The Shadow Thief",
    "The Titan's Awakening",
    "The Ghost in the Machine",
    "The Centurion's Last Stand",
    "The Secret of the Sphinx",
    "A Caribbean Proposal",
    "The Mapmaker's Daughter",
    "The Mystery of the Blue Train",
    "The Leviathan's Wake",
    "The Children of the Comet",
    "The Silent Mountain",
    "The Amazonian Warrior",
    "The Lost Scrolls of Alexandria",
    "A Tokyo Tryst",
    "The Baker's Dozen",
    "The Case of the Cryptic Crossword",
    "The Warlock's Grimoire",
    "Beyond the Kuiper Belt",
    "The Silent City",
    "The Ottoman Sultan",
    "The Search for Shangri-La",
    "Love on the Nile",
    "The Swordsmith's Art",
    "The Mystery of the Seven Dials",
    "The Dragon's Prophecy",
    "The Final Equinox",
    "The Perfect Getaway",
    "The Queen's Guard",
    "The Lost Civilization",
    "A Vineyard Vow",
    "Echoes of Tomorrow",
    "The Sunken City Rises",
    "When the Stars Align",
    "The Last Oracle's Secret",
    "Beneath a Crimson Moon",
    "The Alchemist's Legacy",
    "Fortress of Whispering Winds",
    "The Gilded Serpent",
    "Chronicles of the Starfarers",
    "The Emerald Tablet",
    "The Time Weaver's Gambit",
    "Secrets of the Silent Sisters",
    "The Dragon's Prophecy",
    "The Quantum Thief",
    "City of Shifting Sands",
    "The Midnight Masquerade",
    "The Forgotten Kingdom's Heir",
    "The Celestial Cartographer",
    "The Iron Phoenix",
    "Whispers of the Ancients",
    "The Serpent's Kiss",
    "The Stolen Galaxy",
    "The Clockwork Nightingale",
    "The Alchemist's Code",
    "The Last Voyage of the Wanderer",
    "The Obsidian Throne",
    "The Gilded Compass",
    "The Star-Crossed Lovers",
    "The Ashen Crown",
    "The City of Eternal Night",
    "The Traitor's Gambit",
    "The Shadow Protocol",
    "The Sunstone Conspiracy",
    "The Cartographer's Secret",
    "The Crimson Pact",
    "The Oracle's Deception",
    "The Forgotten Legion",
    "The Starfire Algorithm",
    "The Iron Citadel",
    "The Serpent Cult",
    "The Alchemist's Secret",
    "The Silent Planet",
    "The Gilded Phoenix",
    "The Nebula's Secret",
    "The Cartographer's Quest",
    "The Crimson Cipher",
    "The Dragon's Tooth",
]

first_names = [
    "Elara",
    "Marcus",
    "Isabelle",
    "Julian",
    "Sophia",
    "David",
    "Anya",
    "Leo",
    "Elena",
    "Samuel",
    "Olivia",
    "Ethan",
    "Chloe",
    "Noah",
    "Mia",
    "Liam",
    "Astrid",
    "Ronan",
    "Seraphina",
    "Jasper",
    "Clara",
    "Finnian",
    "Aurora",
    "Caspian",
    "Lyra",
    "Orion",
    "Genevieve",
    "Atticus",
    "Willow",
    "Silas",
    "Evelyn",
    "Lucian",
    "Hazel",
    "Theodore",
    "Iris",
    "Felix" "Ava",
    "Caleb",
    "Harper",
    "William",
    "Charlotte",
    "James",
    "Emily",
    "Michael",
    "Amelia",
    "Benjamin",
    "Eleanor",
    "Daniel",
    "Elizabeth",
    "Thomas",
    "Sarah",
    "Joseph",
    "Jessica",
    "Robert",
    "Laura",
    "Kevin",
    "Patricia",
    "Charles",
    "Linda",
    "George",
    "Margaret",
    "Ronald",
    "Nancy",
    "Edward",
    "Susan",
    "Gary",
    "Betty",
    "Kenneth",
    "Brenda",
    "Patrick",
    "Deborah",
    "Larry",
    "Carol",
    "Walter",
    "Diane",
    "Arthur",
    "Virginia",
    "Henry",
    "Helen",
    "Frank",
    "Joyce",
    "Harold",
    "Gloria",
    "Albert",
    "Frances",
    "Jack",
    "Janet",
    "Billy",
    "Christine",
    "Judy",
    "Paul",
]

last_names = [
    "Vance",
    "Thorne",
    "Dubois",
    "Croft",
    "Chen",
    "Miller",
    "Sharma",
    "Maxwell",
    "Rossi",
    "Hayes",
    "Reed",
    "Carter",
    "Davis",
    "Evans",
    "Rodriguez",
    "Wilson",
    "Blackwood",
    "Stone",
    "Rivera",
    "Valdez",
    "Sinclair",
    "Montgomery",
    "Whitaker",
    "Sutherland",
    "Zhang",
    "Kim",
    "Al-Ghazi",
    "Kowalski",
    "Nakamura",
    "O'Connell",
    "Peterson",
    "Ivanov",
    "Jensen",
    "Abara",
    "Gallagher",
    "Fitzgerald" "Taylor",
    "Scott",
    "Green",
    "Adams",
    "Baker",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
    "Wright",
    "Scott",
    "Mitchell",
    "Carter",
    "Adams",
    "Nelson",
    "Perez",
    "Lewis",
    "Lee",
    "Hall",
    "Young",
    "King",
]

categories = [
    "Adventure",
    "Romance",
    "Fiction",
    "Mystery",
    "Fantasy",
    "Science Fiction",
    "Thriller",
    "Historical Fiction",
]

usernames = [
    "Bookworm_Reader",
    "NovelFan22",
    "SciFiGuy1984",
    "MysteryMaven",
    "HistoryBuff_01",
    "FantasyFreak",
    "LitLover99",
    "PageExplorer",
    "StorySeeker_X",
    "InkDragon",
    "TheReadingNook",
    "ChapterMaster",
    "VerseVoyager",
    "PlotTwistPro",
    "WordWeaver7",
    "CosmicReader",
    "TimeTravelTales",
    "DetectiveReads",
    "HistoricAdventures",
    "MythicReader",
    "RomanceReader4Ever",
    "ThrillerFanatic",
    "AdventureJunkie21",
    "ComicBookGuy",
    "MangaManiac",
    "PoetryPhile",
    "BioReader",
    "MemoirMonster",
    "TravelBookFan",
    "CookbookKing",
]


# --- Data Generation Function ---
def generate_book_entry():
    """Generates a single fake book entry with a valid ISBN-13."""
    # Start with the 978 prefix
    digits = [9, 7, 8]
    # Add 9 random digits
    for _ in range(9):
        digits.append(random.randint(0, 9))

    # Calculate the check digit for ISBN-13
    # Weights alternate 1, 3, 1, 3, ...
    s = 0
    for i in range(12):
        if (i + 1) % 2 == 1:  # Odd position (1st, 3rd, 5th... digit)
            s += digits[i] * 1
        else:  # Even position (2nd, 4th, 6th... digit)
            s += digits[i] * 3

    check_digit = (10 - (s % 10)) % 10
    digits.append(check_digit)

    isbn = "".join(map(str, digits))

    title = random.choice(book_titles)
    author_first = random.choice(first_names)
    author_last = random.choice(last_names)
    author = f"{author_first} {author_last}"

    year = random.randint(1900, datetime.datetime.now().year)
    category = random.choice(categories)

    return {
        "isbn": isbn,
        "title": title,
        "author": author,
        "year": year,
        "category": category,
    }


def generate_books_data(num_books):
    """Generates a list of fake book entries."""
    books = []
    for _ in range(num_books):
        books.append(generate_book_entry())
    return books


def generate_isbns_data(books):
    """Extracts ISBNs from a list of book entries."""
    isbns = []
    for bo in books:
        isbns.append(bo["isbn"])
    return isbns


def generate_reviews_data(books):
    """Generates fake review data for a list of books."""
    reviews = []
    review_texts = [
        "A truly captivating read from start to finish. Highly recommended!",
        "I enjoyed the characters and the plot kept me hooked.",
        "An interesting concept, though the pacing felt a bit slow at times.",
        "Not my usual genre, but I found it surprisingly engaging.",
        "A decent book for a quick read, but not particularly memorable.",
        "The ending was a bit predictable, but the journey was enjoyable.",
        "I had high hopes for this one, but it fell a little flat for me.",
        "Well-written with compelling characters. 4 out of 5 stars for me!",
        "A quick and fun read. Perfect for a weekend.",
        "The world-building was fantastic! I felt completely immersed.",
        "Couldn't put it down! A real page-turner.",
        "The author's writing style is beautiful and evocative.",
        "A thought-provoking story that stayed with me long after I finished.",
        "While the premise was good, the execution could have been stronger.",
        "The main character is a bit strange, but the supporting cast was ok",
        "This book had me laughing out loud at several points.",
        "A heartwarming tale that's perfect for a cozy afternoon.",
        "The mystery elements were well-crafted and kept me guessing.",
        "I usually love this author, but this one wasn't their best.",
        "A bit slow to start, but it really picked up in the second half.",
        "The plot was a little convoluted for my taste.",
        "An absolute masterpiece! I'll be recommending this to everyone.",
        "Solid effort, but some parts dragged on a bit too long.",
        "The historical details were fascinating and well-researched.",
        "I was hoping for more from the ending, it felt rushed.",
        "A light and fluffy read, perfect for escaping reality for a bit.",
        "The dialogue felt natural and authentic.",
        "Some interesting ideas, but ultimately forgettable.",
        "I'm still thinking about this book days later. Powerful stuff.",
        "It was okay. Not great, not terrible, just okay.",
    ]

    for bo in books:
        num_reviews_for_book = random.randint(1, 3)
        for _ in range(num_reviews_for_book):
            review_content = {
                "isbn": bo["isbn"],
                "username": random.choice(
                    usernames
                ),  # Use global usernames list
                "score": random.randint(1, 5),  # Changed from 1-10 to 1-5
                "review_text": random.choice(review_texts),
            }
            reviews.append(review_content)
    return reviews


# --- Main Script ---
if __name__ == "__main__":
    BOOKS_FILENAME = "books.csv"
    ISBNS_FILENAME = "isbns.csv"
    REVIEWS_FILENAME = "reviews.csv"

    print(f"Generating {NUM_ENTRIES} book entries...")
    try:
        # Generate all data
        books_data = generate_books_data(NUM_ENTRIES)
        isbns_data = generate_isbns_data(books_data)
        reviews_data = generate_reviews_data(books_data)

        # Write books.csv
        with open(BOOKS_FILENAME, "w", newline="", encoding="utf-8") as csvfile:
            writer = csv.writer(csvfile)
            for book in books_data:
                writer.writerow(
                    [
                        book["isbn"],
                        book["title"],
                        book["author"],
                        book["year"],
                        book["category"],
                    ]
                )

        # Write isbns.csv
        with open(ISBNS_FILENAME, "w", newline="", encoding="utf-8") as csvfile:
            writer = csv.writer(csvfile)
            # writer.writerow(["isbn"]) # Header removed
            for isbn_item in isbns_data:
                writer.writerow([isbn_item])

        # Write reviews.csv
        with open(
            REVIEWS_FILENAME, "w", newline="", encoding="utf-8"
        ) as csvfile:
            writer = csv.writer(csvfile)
            for review in reviews_data:
                writer.writerow(
                    [
                        review["isbn"],
                        review["username"],
                        review["score"],
                        review["review_text"],
                    ]
                )

        print(
            f"Successfully generated and saved data to '{BOOKS_FILENAME}', "
            f"'{ISBNS_FILENAME}', and '{REVIEWS_FILENAME}'"
        )
    # pylint: disable=broad-exception-caught
    except Exception as e:
        print(f"An error occurred: {e}")
