# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Role to read the UID of the `kubernetes` Service in the `default` namespace.
# The controller uses the first 8 characters of this UID as the cluster ID.
# Not required for GKE clusters, as the controller uses the `uid` data value of the `ingress-uid`
# ConfigMap in the `kube-system` namespace instead.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubernetes-service-reader
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - services
  resourceNames:
  - kubernetes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election
  namespace: hybrid-neg-system # kpt-set: ${hybrid-neg-controller-namespace}
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
